{
  "address": "0x7e18C76Aa26BD6bD04196e34C93a925498A5d0F1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "scope",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "cid",
          "type": "bytes"
        }
      ],
      "name": "InvalidEntry",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "scope",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        }
      ],
      "name": "EntryRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "scope",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes4",
          "name": "sig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "submitter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "cid",
          "type": "bytes"
        }
      ],
      "name": "EntryUpserted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_scope",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "_sig",
          "type": "bytes4"
        }
      ],
      "name": "getEntry",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum RosetteStone.EntryStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_scopes",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "_sigs",
          "type": "bytes4[]"
        }
      ],
      "name": "removeEntries",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_scope",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "_sig",
          "type": "bytes4"
        }
      ],
      "name": "removeEntry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_scopes",
          "type": "bytes32[]"
        },
        {
          "internalType": "bytes4[]",
          "name": "_sigs",
          "type": "bytes4[]"
        },
        {
          "internalType": "bytes[]",
          "name": "_cids",
          "type": "bytes[]"
        }
      ],
      "name": "upsertEntries",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_scope",
          "type": "bytes32"
        },
        {
          "internalType": "bytes4",
          "name": "_sig",
          "type": "bytes4"
        },
        {
          "internalType": "bytes",
          "name": "_cid",
          "type": "bytes"
        }
      ],
      "name": "upsertEntry",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa9031ec5398abc6694ed746d61dccf7a04ce7a156a48b902b4efb028d1d91db9",
  "receipt": {
    "to": null,
    "from": "0x5CfAdf589a694723F9Ed167D647582B3Db3b33b3",
    "contractAddress": "0x7e18C76Aa26BD6bD04196e34C93a925498A5d0F1",
    "transactionIndex": 1,
    "gasUsed": "1059427",
    "logsBloom": "0x
    "blockHash": "0x3c5fde4b328f1e851f8928e0c4976b90753e8d6f5536f0f2de9f887a1a4dddd6",
    "transactionHash": "0xa9031ec5398abc6694ed746d61dccf7a04ce7a156a48b902b4efb028d1d91db9",
    "logs": [],
    "blockNumber": 7210172,
    "cumulativeGasUsed": "1080427",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "3e1f529fe58432da30b6908fc22522b7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"scope\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"}],\"name\":\"InvalidEntry\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"scope\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"}],\"name\":\"EntryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"scope\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes4\",\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"submitter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"cid\",\"type\":\"bytes\"}],\"name\":\"EntryUpserted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_scope\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"_sig\",\"type\":\"bytes4\"}],\"name\":\"getEntry\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum RosetteStone.EntryStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_scopes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_sigs\",\"type\":\"bytes4[]\"}],\"name\":\"removeEntries\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_scope\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"_sig\",\"type\":\"bytes4\"}],\"name\":\"removeEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_scopes\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes4[]\",\"name\":\"_sigs\",\"type\":\"bytes4[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_cids\",\"type\":\"bytes[]\"}],\"name\":\"upsertEntries\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_scope\",\"type\":\"bytes32\"},{\"internalType\":\"bytes4\",\"name\":\"_sig\",\"type\":\"bytes4\"},{\"internalType\":\"bytes\",\"name\":\"_cid\",\"type\":\"bytes\"}],\"name\":\"upsertEntry\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EntryRemoved(bytes32,bytes4)\":{\"details\":\"Emitted when an entry is removed.\",\"params\":{\"scope\":\"The contract's bytecode hash.\",\"sig\":\"The signature of the method the entry is describing.\"}},\"EntryUpserted(bytes32,bytes4,address,bytes)\":{\"details\":\"Emitted when an entry is inserted or updated.\",\"params\":{\"cid\":\"The IPFS CID of the file containing the Radspec description.\",\"scope\":\"The contract's bytecode hash.\",\"sig\":\"The signature of the method the entry is describing.\",\"submitter\":\"The address that upserted the entry.\"}}},\"kind\":\"dev\",\"methods\":{\"getEntry(bytes32,bytes4)\":{\"details\":\"Get an entry from the registry.\",\"params\":{\"_scope\":\"The contract's bytecode hash.\",\"_sig\":\"The signature of the method the entry is describing.\"},\"returns\":{\"_0\":\"The CID, submitter, and status of the entry.\"}},\"removeEntries(bytes32[],bytes4[])\":{\"details\":\"Remove a list of entries.\",\"params\":{\"_scopes\":\"The list of contract's bytecode hash.\",\"_sigs\":\"The list of function signatures.\"}},\"removeEntry(bytes32,bytes4)\":{\"details\":\"Remove an entry from the registry.\",\"params\":{\"_scope\":\"The contract's bytecode hash.\",\"_sig\":\"The signature of the method the entry is describing.\"}},\"upsertEntries(bytes32[],bytes4[],bytes[])\":{\"details\":\"Upsert a list of entries.\",\"params\":{\"_cids\":\"The list of IPFS CIDs of the file containing the description.\",\"_scopes\":\"The list of contract's bytecode hash.\",\"_sigs\":\"The list of function signatures.\"}},\"upsertEntry(bytes32,bytes4,bytes)\":{\"details\":\"Upsert a registry entry.\",\"params\":{\"_cid\":\"The IPFS CID of the file containing the description.\",\"_scope\":\"The contract's bytecode hash.\",\"_sig\":\"The signature of the method the entry is describing.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/RosetteStone.sol\":\"RosetteStone\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"src/RosetteStone.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.13;\\n\\nimport \\\"./lib/TimeHelpers.sol\\\";\\n\\ncontract RosetteStone is TimeHelpers {\\n    error InvalidEntry(bytes32 scope, bytes4 sig, bytes cid);\\n\\n    enum EntryStatus {\\n        Empty,\\n        Added\\n    }\\n\\n    struct Entry {\\n        uint64 upsertAt; // Blocktime at which entry was upserted\\n        bytes cid; // IPFS CID of the file containing the entry data\\n        address submitter; // Address that upserted the entry\\n    }\\n\\n    /**\\n     * A nested mapping of scope -> sig -> entry.\\n     */\\n    mapping(bytes32 => mapping(bytes4 => Entry)) private entries;\\n\\n    // /////////////////////// MODIFIERS ////////////////////////////////////////////////////////////////////////\\n\\n    modifier validEntry(\\n        bytes32 _scope,\\n        bytes4 _sig,\\n        bytes memory _cid\\n    ) {\\n        if (_scope == bytes32(0) || _sig == bytes4(0) || _cid.length == 0) {\\n            revert InvalidEntry(_scope, _sig, _cid);\\n        }\\n        _;\\n    }\\n\\n    // ////////////////////////// EVENTS ///////////////////////////////////////////////////////////////////////\\n\\n    /**\\n     * @dev Emitted when an entry is inserted or updated.\\n     * @param scope The contract's bytecode hash.\\n     * @param sig The signature of the method the entry is describing.\\n     * @param submitter The address that upserted the entry.\\n     * @param cid The IPFS CID of the file containing the Radspec description.\\n     */\\n    event EntryUpserted(\\n        bytes32 indexed scope,\\n        bytes4 indexed sig,\\n        address submitter,\\n        bytes cid\\n    );\\n\\n    /**\\n     * @dev Emitted when an entry is removed.\\n     * @param scope The contract's bytecode hash.\\n     * @param sig The signature of the method the entry is describing.\\n     */\\n    event EntryRemoved(bytes32 indexed scope, bytes4 indexed sig);\\n\\n    // /////////////////////// CONSTRUCTOR //////////////////////////////////////////////////////////////////////\\n\\n    constructor() {}\\n\\n    // ///////////////////// EXTERNAL ///////////////////////////////////////////////////////////////////////////\\n\\n    /**\\n     * @dev Upsert a registry entry.\\n     * @param _scope The contract's bytecode hash.\\n     * @param _sig The signature of the method the entry is describing.\\n     * @param _cid The IPFS CID of the file containing the description.\\n     */\\n    function upsertEntry(\\n        bytes32 _scope,\\n        bytes4 _sig,\\n        bytes memory _cid\\n    ) public payable validEntry(_scope, _sig, _cid) {\\n        EntryStatus status = _entryStatus(_scope, _sig);\\n        if (status == EntryStatus.Added) {\\n            Entry storage entry_ = entries[_scope][_sig];\\n            require(\\n                entry_.submitter == msg.sender,\\n                \\\"RosetteStone: not authorized address\\\"\\n            );\\n        }\\n\\n        _upsertEntry(_scope, _sig, _cid, msg.sender, getTimestamp64());\\n    }\\n\\n    /**\\n     * @dev Upsert a list of entries.\\n     * @param _scopes The list of contract's bytecode hash.\\n     * @param _sigs The list of function signatures.\\n     * @param _cids The list of IPFS CIDs of the file containing the description.\\n     */\\n    function upsertEntries(\\n        bytes32[] memory _scopes,\\n        bytes4[] memory _sigs,\\n        bytes[] memory _cids\\n    ) external payable {\\n        for (uint256 i = 0; i < _scopes.length; i++) {\\n            upsertEntry(_scopes[i], _sigs[i], _cids[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev Get an entry from the registry.\\n     * @param _scope The contract's bytecode hash.\\n     * @param _sig The signature of the method the entry is describing.\\n     * @return The CID, submitter, and status of the entry.\\n     */\\n    function getEntry(bytes32 _scope, bytes4 _sig)\\n        external\\n        view\\n        returns (\\n            bytes memory,\\n            address,\\n            EntryStatus\\n        )\\n    {\\n        Entry memory entry_ = entries[_scope][_sig];\\n        return (entry_.cid, entry_.submitter, _entryStatus(_scope, _sig));\\n    }\\n\\n    /**\\n     * @dev Remove an entry from the registry.\\n     * @param _scope The contract's bytecode hash.\\n     * @param _sig The signature of the method the entry is describing.\\n     */\\n    function removeEntry(bytes32 _scope, bytes4 _sig) public {\\n        Entry memory entry_ = entries[_scope][_sig];\\n        require(\\n            entry_.submitter == msg.sender,\\n            \\\"RosetteStone: not authorized address\\\"\\n        );\\n\\n        _removeEntry(_scope, _sig);\\n    }\\n\\n    /**\\n     * @dev Remove a list of entries.\\n     * @param _scopes The list of contract's bytecode hash.\\n     * @param _sigs The list of function signatures.\\n     */\\n    function removeEntries(bytes32[] memory _scopes, bytes4[] memory _sigs)\\n        external\\n        payable\\n    {\\n        for (uint256 i = 0; i < _scopes.length; i++) {\\n            this.removeEntry(_scopes[i], _sigs[i]);\\n        }\\n    }\\n\\n    // ///////////////////////// INTERNAL //////////////////////////////////////////////////////////////////////\\n\\n    function _upsertEntry(\\n        bytes32 _scope,\\n        bytes4 _sig,\\n        bytes memory _cid,\\n        address _submitter,\\n        uint64 _upsertAt\\n    ) internal {\\n        Entry storage entry_ = entries[_scope][_sig];\\n        entry_.upsertAt = _upsertAt;\\n        entry_.cid = _cid;\\n        entry_.submitter = _submitter;\\n\\n        emit EntryUpserted(_scope, _sig, _submitter, _cid);\\n    }\\n\\n    function _removeEntry(bytes32 _scope, bytes4 _sig) internal {\\n        delete entries[_scope][_sig];\\n        emit EntryRemoved(_scope, _sig);\\n    }\\n\\n    /**\\n     * @dev Get the current status of an entry.\\n     * @param _scope The contract's bytecode hash.\\n     * @param _sig The signature of the method the entry is describing.\\n     * @return The current EntryStatus\\n     */\\n    function _entryStatus(bytes32 _scope, bytes4 _sig)\\n        internal\\n        view\\n        returns (EntryStatus)\\n    {\\n        Entry memory entry_ = entries[_scope][_sig];\\n        if (entry_.submitter == address(0)) {\\n            return EntryStatus.Empty;\\n        }\\n\\n        return EntryStatus.Added;\\n    }\\n}\\n\",\"keccak256\":\"0xfcc3c488f9f575a9b09dc5f2387b584d06b5d6f2463d169eb2cabc8b9ad9766d\",\"license\":\"MIT\"},\"src/lib/TimeHelpers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./Uint256Helpers.sol\\\";\\n\\ncontract TimeHelpers {\\n    using Uint256Helpers for uint256;\\n\\n    /**\\n     * @dev Returns the current timestamp.\\n     *      Using a function rather than `block.timestamp` allows us to easily mock it in\\n     *      tests.\\n     */\\n    function getTimestamp() internal view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Returns the current timestamp, converted to uint64.\\n     *      Using a function rather than `block.timestamp` allows us to easily mock it in\\n     *      tests.\\n     */\\n    function getTimestamp64() internal view returns (uint64) {\\n        return getTimestamp().toUint64();\\n    }\\n}\\n\",\"keccak256\":\"0xa1afac20b21916952d727a7e0534c966a3a4eac9d77a6ee2d42b3b3b33b09031\",\"license\":\"MIT\"},\"src/lib/Uint256Helpers.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nlibrary Uint256Helpers {\\n    /**\\n     * @dev Returns the downcasted uint64 from uint256, reverting on\\n     * overflow (when the input is greater than largest uint64).\\n     *\\n     * Counterpart to Solidity's `uint64` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - input must fit into 64 bits\\n     */\\n    function toUint64(uint256 value) internal pure returns (uint64) {\\n        require(\\n            value <= type(uint64).max,\\n            \\\"SafeCast: value doesn't fit in 64 bits\\\"\\n        );\\n        return uint64(value);\\n    }\\n}\\n\",\"keccak256\":\"0xf9be3ea337838d5c7b9592e74bf418b9039ca83ab1653963d05be62eee0030c6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061125d806100206000396000f3fe60806040526004361061005a5760003560e01c8063c641d37b11610043578063c641d37b14610094578063d3cd7efa146100cc578063d714250f146100df57600080fd5b80633199f1991461005f5780633d5d755514610074575b600080fd5b61007261006d366004610d48565b6100f2565b005b34801561008057600080fd5b5061007261008f366004610dac565b6101e0565b3480156100a057600080fd5b506100b46100af366004610dac565b610395565b6040516100c393929190610e72565b60405180910390f35b6100726100da366004610f76565b6104ca565b6100726100ed366004610fcd565b610668565b60005b82518110156101db573073ffffffffffffffffffffffffffffffffffffffff16633d5d755584838151811061012c5761012c6110c5565b6020026020010151848481518110610146576101466110c5565b60200260200101516040518363ffffffff1660e01b81526004016101969291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260400190565b600060405180830381600087803b1580156101b057600080fd5b505af11580156101c4573d6000803e3d6000fd5b5050505080806101d3906110f4565b9150506100f5565b505050565b6000828152602081815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684528252808320815160608101909252805467ffffffffffffffff168252600181018054929391929184019161024790611153565b80601f016020809104026020016040519081016040528092919081815260200182805461027390611153565b80156102c05780601f10610295576101008083540402835291602001916102c0565b820191906000526020600020905b8154815290600101906020018083116102a357829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff908116602090920191909152604082015191925016331461038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f736574746553746f6e653a206e6f7420617574686f72697a65642061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101db83836106e2565b6000828152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000085168452825280832081516060818101909352815467ffffffffffffffff1681526001820180549395948594859492918401919061040290611153565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90611153565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff166020918201528101516040820151919250906104bc88886107cc565b935093509350509250925092565b8282828215806104fa57507fffffffff000000000000000000000000000000000000000000000000000000008216155b8061050457508051155b15610541578282826040517f2cb1d5de000000000000000000000000000000000000000000000000000000008152600401610382939291906111a6565b600061054d87876107cc565b9050600181600181111561056357610563610e43565b0361064b576000878152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a1684529091529020600281015473ffffffffffffffffffffffffffffffffffffffff163314610649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f736574746553746f6e653a206e6f7420617574686f72697a65642061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610382565b505b61065f8787873361065a6108fd565b61090d565b50505050505050565b60005b83518110156106dc576106ca848281518110610689576106896110c5565b60200260200101518483815181106106a3576106a36110c5565b60200260200101518484815181106106bd576106bd6110c5565b60200260200101516104ca565b806106d4816110f4565b91505061066b565b50505050565b6000828152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000085168452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001681559061074f6001830182610ad6565b5060020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556040517fffffffff0000000000000000000000000000000000000000000000000000000082169083907f8a513077ca50d81ef778523963f45428268efc2f84446bc65dc878245436d86f90600090a35050565b6000828152602081815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684528252808320815160608101909252805467ffffffffffffffff16825260018101805485948401919061083190611153565b80601f016020809104026020016040519081016040528092919081815260200182805461085d90611153565b80156108aa5780601f1061087f576101008083540402835291602001916108aa565b820191906000526020600020905b81548152906001019060200180831161088d57829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff9081166020909201919091526040820151919250166108f15760009150506108f7565b60019150505b92915050565b600061090842610a38565b905090565b6000858152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000088168452825290912080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff84161781558451909161098d916001840191870190610b13565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790556040517fffffffff0000000000000000000000000000000000000000000000000000000086169087907f8337e30a61b7a6052db7f8e799971d10a80817ad27294e7b4c36053d3f499a0c90610a2890879089906111f0565b60405180910390a3505050505050565b600067ffffffffffffffff821115610ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f34206269747300000000000000000000000000000000000000000000000000006064820152608401610382565b5090565b508054610ae290611153565b6000825580601f10610af2575050565b601f016020900490600052602060002090810190610b109190610b8f565b50565b828054610b1f90611153565b90600052602060002090601f016020900481019282610b415760008555610b87565b82601f10610b5a57805160ff1916838001178555610b87565b82800160010185558215610b87579182015b82811115610b87578251825591602001919060010190610b6c565b50610ad29291505b5b80821115610ad25760008155600101610b90565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c1a57610c1a610ba4565b604052919050565b600067ffffffffffffffff821115610c3c57610c3c610ba4565b5060051b60200190565b600082601f830112610c5757600080fd5b81356020610c6c610c6783610c22565b610bd3565b82815260059290921b84018101918181019086841115610c8b57600080fd5b8286015b84811015610ca65780358352918301918301610c8f565b509695505050505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ce157600080fd5b919050565b600082601f830112610cf757600080fd5b81356020610d07610c6783610c22565b82815260059290921b84018101918181019086841115610d2657600080fd5b8286015b84811015610ca657610d3b81610cb1565b8352918301918301610d2a565b60008060408385031215610d5b57600080fd5b823567ffffffffffffffff80821115610d7357600080fd5b610d7f86838701610c46565b93506020850135915080821115610d9557600080fd5b50610da285828601610ce6565b9150509250929050565b60008060408385031215610dbf57600080fd5b82359150610dcf60208401610cb1565b90509250929050565b6000815180845260005b81811015610dfe57602081850181015186830182015201610de2565b81811115610e10576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b606081526000610e856060830186610dd8565b905073ffffffffffffffffffffffffffffffffffffffff8416602083015260028310610eda577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b600082601f830112610ef957600080fd5b813567ffffffffffffffff811115610f1357610f13610ba4565b610f4460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610bd3565b818152846020838601011115610f5957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610f8b57600080fd5b83359250610f9b60208501610cb1565b9150604084013567ffffffffffffffff811115610fb757600080fd5b610fc386828701610ee8565b9150509250925092565b600080600060608486031215610fe257600080fd5b833567ffffffffffffffff80821115610ffa57600080fd5b61100687838801610c46565b945060209150818601358181111561101d57600080fd5b61102988828901610ce6565b94505060408601358181111561103e57600080fd5b8601601f8101881361104f57600080fd5b803561105d610c6782610c22565b81815260059190911b8201840190848101908a83111561107c57600080fd5b8584015b838110156110b4578035868111156110985760008081fd5b6110a68d8983890101610ee8565b845250918601918601611080565b508096505050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361114c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061116757607f821691505b6020821081036111a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8381527fffffffff00000000000000000000000000000000000000000000000000000000831660208201526060604082015260006111e76060830184610dd8565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061121f6040830184610dd8565b94935050505056fea2646970667358221220634cd52cd0c190ab2db1ab9e6935633cf355fff1477f83e6775319a952c86deb64736f6c634300080d0033",
  "deployedBytecode": "0x60806040526004361061005a5760003560e01c8063c641d37b11610043578063c641d37b14610094578063d3cd7efa146100cc578063d714250f146100df57600080fd5b80633199f1991461005f5780633d5d755514610074575b600080fd5b61007261006d366004610d48565b6100f2565b005b34801561008057600080fd5b5061007261008f366004610dac565b6101e0565b3480156100a057600080fd5b506100b46100af366004610dac565b610395565b6040516100c393929190610e72565b60405180910390f35b6100726100da366004610f76565b6104ca565b6100726100ed366004610fcd565b610668565b60005b82518110156101db573073ffffffffffffffffffffffffffffffffffffffff16633d5d755584838151811061012c5761012c6110c5565b6020026020010151848481518110610146576101466110c5565b60200260200101516040518363ffffffff1660e01b81526004016101969291909182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260400190565b600060405180830381600087803b1580156101b057600080fd5b505af11580156101c4573d6000803e3d6000fd5b5050505080806101d3906110f4565b9150506100f5565b505050565b6000828152602081815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684528252808320815160608101909252805467ffffffffffffffff168252600181018054929391929184019161024790611153565b80601f016020809104026020016040519081016040528092919081815260200182805461027390611153565b80156102c05780601f10610295576101008083540402835291602001916102c0565b820191906000526020600020905b8154815290600101906020018083116102a357829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff908116602090920191909152604082015191925016331461038b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f736574746553746f6e653a206e6f7420617574686f72697a65642061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6101db83836106e2565b6000828152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000085168452825280832081516060818101909352815467ffffffffffffffff1681526001820180549395948594859492918401919061040290611153565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90611153565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff166020918201528101516040820151919250906104bc88886107cc565b935093509350509250925092565b8282828215806104fa57507fffffffff000000000000000000000000000000000000000000000000000000008216155b8061050457508051155b15610541578282826040517f2cb1d5de000000000000000000000000000000000000000000000000000000008152600401610382939291906111a6565b600061054d87876107cc565b9050600181600181111561056357610563610e43565b0361064b576000878152602081815260408083207fffffffff000000000000000000000000000000000000000000000000000000008a1684529091529020600281015473ffffffffffffffffffffffffffffffffffffffff163314610649576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f526f736574746553746f6e653a206e6f7420617574686f72697a65642061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610382565b505b61065f8787873361065a6108fd565b61090d565b50505050505050565b60005b83518110156106dc576106ca848281518110610689576106896110c5565b60200260200101518483815181106106a3576106a36110c5565b60200260200101518484815181106106bd576106bd6110c5565b60200260200101516104ca565b806106d4816110f4565b91505061066b565b50505050565b6000828152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000085168452909152812080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001681559061074f6001830182610ad6565b5060020180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690556040517fffffffff0000000000000000000000000000000000000000000000000000000082169083907f8a513077ca50d81ef778523963f45428268efc2f84446bc65dc878245436d86f90600090a35050565b6000828152602081815260408083207fffffffff00000000000000000000000000000000000000000000000000000000851684528252808320815160608101909252805467ffffffffffffffff16825260018101805485948401919061083190611153565b80601f016020809104026020016040519081016040528092919081815260200182805461085d90611153565b80156108aa5780601f1061087f576101008083540402835291602001916108aa565b820191906000526020600020905b81548152906001019060200180831161088d57829003601f168201915b50505091835250506002919091015473ffffffffffffffffffffffffffffffffffffffff9081166020909201919091526040820151919250166108f15760009150506108f7565b60019150505b92915050565b600061090842610a38565b905090565b6000858152602081815260408083207fffffffff0000000000000000000000000000000000000000000000000000000088168452825290912080547fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000001667ffffffffffffffff84161781558451909161098d916001840191870190610b13565b506002810180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790556040517fffffffff0000000000000000000000000000000000000000000000000000000086169087907f8337e30a61b7a6052db7f8e799971d10a80817ad27294e7b4c36053d3f499a0c90610a2890879089906111f0565b60405180910390a3505050505050565b600067ffffffffffffffff821115610ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203660448201527f34206269747300000000000000000000000000000000000000000000000000006064820152608401610382565b5090565b508054610ae290611153565b6000825580601f10610af2575050565b601f016020900490600052602060002090810190610b109190610b8f565b50565b828054610b1f90611153565b90600052602060002090601f016020900481019282610b415760008555610b87565b82601f10610b5a57805160ff1916838001178555610b87565b82800160010185558215610b87579182015b82811115610b87578251825591602001919060010190610b6c565b50610ad29291505b5b80821115610ad25760008155600101610b90565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c1a57610c1a610ba4565b604052919050565b600067ffffffffffffffff821115610c3c57610c3c610ba4565b5060051b60200190565b600082601f830112610c5757600080fd5b81356020610c6c610c6783610c22565b610bd3565b82815260059290921b84018101918181019086841115610c8b57600080fd5b8286015b84811015610ca65780358352918301918301610c8f565b509695505050505050565b80357fffffffff0000000000000000000000000000000000000000000000000000000081168114610ce157600080fd5b919050565b600082601f830112610cf757600080fd5b81356020610d07610c6783610c22565b82815260059290921b84018101918181019086841115610d2657600080fd5b8286015b84811015610ca657610d3b81610cb1565b8352918301918301610d2a565b60008060408385031215610d5b57600080fd5b823567ffffffffffffffff80821115610d7357600080fd5b610d7f86838701610c46565b93506020850135915080821115610d9557600080fd5b50610da285828601610ce6565b9150509250929050565b60008060408385031215610dbf57600080fd5b82359150610dcf60208401610cb1565b90509250929050565b6000815180845260005b81811015610dfe57602081850181015186830182015201610de2565b81811115610e10576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b606081526000610e856060830186610dd8565b905073ffffffffffffffffffffffffffffffffffffffff8416602083015260028310610eda577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b826040830152949350505050565b600082601f830112610ef957600080fd5b813567ffffffffffffffff811115610f1357610f13610ba4565b610f4460207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610bd3565b818152846020838601011115610f5957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610f8b57600080fd5b83359250610f9b60208501610cb1565b9150604084013567ffffffffffffffff811115610fb757600080fd5b610fc386828701610ee8565b9150509250925092565b600080600060608486031215610fe257600080fd5b833567ffffffffffffffff80821115610ffa57600080fd5b61100687838801610c46565b945060209150818601358181111561101d57600080fd5b61102988828901610ce6565b94505060408601358181111561103e57600080fd5b8601601f8101881361104f57600080fd5b803561105d610c6782610c22565b81815260059190911b8201840190848101908a83111561107c57600080fd5b8584015b838110156110b4578035868111156110985760008081fd5b6110a68d8983890101610ee8565b845250918601918601611080565b508096505050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361114c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b600181811c9082168061116757607f821691505b6020821081036111a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8381527fffffffff00000000000000000000000000000000000000000000000000000000831660208201526060604082015260006111e76060830184610dd8565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061121f6040830184610dd8565b94935050505056fea2646970667358221220634cd52cd0c190ab2db1ab9e6935633cf355fff1477f83e6775319a952c86deb64736f6c634300080d0033",
  "devdoc": {
    "events": {
      "EntryRemoved(bytes32,bytes4)": {
        "details": "Emitted when an entry is removed.",
        "params": {
          "scope": "The contract's bytecode hash.",
          "sig": "The signature of the method the entry is describing."
        }
      },
      "EntryUpserted(bytes32,bytes4,address,bytes)": {
        "details": "Emitted when an entry is inserted or updated.",
        "params": {
          "cid": "The IPFS CID of the file containing the Radspec description.",
          "scope": "The contract's bytecode hash.",
          "sig": "The signature of the method the entry is describing.",
          "submitter": "The address that upserted the entry."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "getEntry(bytes32,bytes4)": {
        "details": "Get an entry from the registry.",
        "params": {
          "_scope": "The contract's bytecode hash.",
          "_sig": "The signature of the method the entry is describing."
        },
        "returns": {
          "_0": "The CID, submitter, and status of the entry."
        }
      },
      "removeEntries(bytes32[],bytes4[])": {
        "details": "Remove a list of entries.",
        "params": {
          "_scopes": "The list of contract's bytecode hash.",
          "_sigs": "The list of function signatures."
        }
      },
      "removeEntry(bytes32,bytes4)": {
        "details": "Remove an entry from the registry.",
        "params": {
          "_scope": "The contract's bytecode hash.",
          "_sig": "The signature of the method the entry is describing."
        }
      },
      "upsertEntries(bytes32[],bytes4[],bytes[])": {
        "details": "Upsert a list of entries.",
        "params": {
          "_cids": "The list of IPFS CIDs of the file containing the description.",
          "_scopes": "The list of contract's bytecode hash.",
          "_sigs": "The list of function signatures."
        }
      },
      "upsertEntry(bytes32,bytes4,bytes)": {
        "details": "Upsert a registry entry.",
        "params": {
          "_cid": "The IPFS CID of the file containing the description.",
          "_scope": "The contract's bytecode hash.",
          "_sig": "The signature of the method the entry is describing."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30,
        "contract": "src/RosetteStone.sol:RosetteStone",
        "label": "entries",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_mapping(t_bytes4,t_struct(Entry)22_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_mapping(t_bytes4,t_struct(Entry)22_storage))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(bytes4 => struct RosetteStone.Entry))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_struct(Entry)22_storage)"
      },
      "t_mapping(t_bytes4,t_struct(Entry)22_storage)": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => struct RosetteStone.Entry)",
        "numberOfBytes": "32",
        "value": "t_struct(Entry)22_storage"
      },
      "t_struct(Entry)22_storage": {
        "encoding": "inplace",
        "label": "struct RosetteStone.Entry",
        "members": [
          {
            "astId": 17,
            "contract": "src/RosetteStone.sol:RosetteStone",
            "label": "upsertAt",
            "offset": 0,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 19,
            "contract": "src/RosetteStone.sol:RosetteStone",
            "label": "cid",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 21,
            "contract": "src/RosetteStone.sol:RosetteStone",
            "label": "submitter",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}